---
- name: Install containerized GitHub Actions Runner
  hosts: runner
  become: yes

  vars:
    image_ref: "192.168.1.15:5000/gha-runner-new:2.328.0"   # updated to your pushed image
    container_name: "gha-runner"
    runner_labels: "self-hosted,lab"
    runner_workdir: "/runner/_work"

  tasks:
    - name: Ensure Docker is installed
      command: docker --version
      register: docker_ver
      changed_when: false
      failed_when: docker_ver.rc != 0

    - name: Pull runner image
      command: docker pull {{ image_ref }}
      register: pull_out
      changed_when: "'Downloaded newer image' in pull_out.stdout"

    - name: Stop and remove existing container
      shell: |
        docker rm -f {{ container_name }} 2>/dev/null || true
      changed_when: false

    - name: Run GitHub Actions runner container
      shell: |
        docker run -d --name {{ container_name }} --restart=always \
          -e GITHUB_REPO="{{ lookup('env','GITHUB_REPO') }}" \
          -e GITHUB_PAT="{{ lookup('env','GITHUB_PAT') | default('', true) }}" \
          -e RUNNER_TOKEN="{{ lookup('env','RUNNER_TOKEN') | default('', true) }}" \
          -e RUNNER_ALLOW_RUNASROOT=1 \
          -e TF_PLUGIN_CACHE_DIR="/tfplugin-cache" \
          -e RUNNER_TOOL_CACHE="/runner/_toolcache" \
          -e RUNNER_LABELS="{{ runner_labels }}" \
          -e RUNNER_WORKDIR="{{ runner_workdir }}" \
          -v /opt/tfplugin-cache:/tfplugin-cache \
          -v /opt/gha-toolcache:/runner/_toolcache \
          -v /var/run/docker.sock:/var/run/docker.sock \
          {{ image_ref }}
      args:
        executable: /bin/bash

    - name: Wait for container to become healthy-ish
      shell: |
        sleep 5
        docker logs --tail 50 {{ container_name }} | tail -n +1
      register: logs
      changed_when: false

    - name: Show runner container logs (last 50 lines)
      debug:
        var: logs.stdout
